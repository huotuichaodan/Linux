1.重定向

输入重定向中用到的符号及其作用
命令 < 文件| 将文件作为命令的标准输入
命令 << 分界符| 从标准输入中读入，直到遇见分界符才停止
命令 < 文件 1 > 文件 2 将文件 1| 作为命令的标准输入并将标准输出到文件 2

输出重定向中用到的符号及其作用
命令 > 文件| 将标准输出重定向到一个文件中（清空原有文件的数据）
命令 2> 文件| 将错误输出重定向到一个文件中（清空原有文件的数据）
命令 >> 文件| 将标准输出重定向到一个文件中（追加到原有内容的后面）
命令 2>> 文件| 将错误输出重定向到一个文件中（追加到原有内容的后面）
命令 >> 文件 2>&1 或命令 &>> 文件 |将标准输出与错误输出共同写入到文件中（追加到原有内容的后面）

标准输入和输出的0和1可以不写，但是错误输出的2是一定要写的
输出重定向用的比较多，而输入重定向相对来说有些冷门，输入重定向的作用是把文件直接导入到命令中

输出举例：man bash > readme.txt
输入举例：wc -l < readme.txt

2.管道命令符

其执行格式为“命令 A | 命令 B”。管道命令符的作用也可以用一句话来概括“把前一个命令原本要输出到屏幕的标准正常数据当作是后一个命令的标准输入”
当然 命令 A | 命令 B | 命令 C 也是可以的

3.命令行的通配符

通配符就是通用的匹配信息的符号，比如星号（*）代表匹配零个或多个字符，问号（?）代表匹配单个字符，
中括号内加上数字[0-9]代表匹配 0～9 之间的单个数字的字符，而中括号内加上字母[abc]则是代表匹配 a、b、c 三个字符中的任意一个字符

4.常用的转义字符

➢ 反斜杠（\）：使反斜杠后面的一个变量变为单纯的字符串。
➢ 单引号（''）：转义其中所有的变量为单纯的字符串。
➢ 双引号（""）：保留其中的变量属性，不进行转义处理。
➢ 反引号（``）：把其中的命令执行后返回结果。

5.重要的环境变量

Linux 系统中最重要的 10 个环境变量
HOME| 用户的主目录（即家目录）
SHELL| 用户在使用的 Shell 解释器名称
HISTSIZE| 输出的历史命令记录条数
HISTFILESIZE| 保存的历史命令记录条数
MAIL| 邮件保存路径
LANG| 系统语言、语系名称
RANDOM| 生成一个随机数字
PS1 Bash| 解释器的提示符
PATH| 定义解释器搜索用户执行命令的路径
EDITOR| 用户默认的文本编辑器

用户可以自由设置一般变量，而且可以使用 export 命令将其提升为全局变量   
